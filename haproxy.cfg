global
	log /dev/log	local0
	log /dev/log	local1 notice

	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-eiinabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

    tune.ssl.cachesize 100000
    tune.ssl.maxrecord 65536
    tune.ssl.default-dh-param 2048
#nbproc 8
#cpu-map 1 0
#cpu-map 2 1
#cpu-map 3 2
#cpu-map 4 3
#cpu-map 5 4
#cpu-map 6 5
#cpu-map 7 6
#cpu-map 8 7
#stats bind-process 8
maxconn 2000

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	maxconn 200000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
#	errorfile 503 /etc/haproxy/errors/ma.http
#	errorfile 504 /etc/haproxy/errors/ma.http

    option tcp-smart-accept
    option tcp-smart-connect
    option http-server-close
    option tcp-smart-accept
    option tcp-smart-connect
    option redispatch
    retries 3

    timeout connect 4s
    timeout client  30s
    timeout server  30s
    timeout queue   5s
    timeout tunnel  2m

    timeout http-request 60s
    timeout http-keep-alive 2s
    timeout client-fin 1s
    timeout server-fin 1s



frontend http-in
    bind *:80
    bind *:443 ssl crt www.cpatutor2022.com.pem  alpn h2,http/1.1

  # redirect scheme https code 301 if { hdr_end(Host) -i beyondtrainingplus.in.th } !{ ssl_fc }
  # redirect prefix https://www.beyondtrainingplus.in.th code 301 if { hdr_end(host) -i beyondtrainingplus.in.th } !{ ssl_fc }

   # http-request redirect prefix https://www.%[hdr(host)] code 301 if { hdr(host) -i beyondtrainingplus.in.th }
   # http-request redirect prefix https://%[hdr(host)] code 301 if { hdr(host) -i www.beyondtrainingplus.in.th } !{ ssl_fc }



    redirect scheme https if !{ ssl_fc }

    mode http
    default_backend web_servers

acl letsencrypt-acl path_beg /.well-known/acme-challenge/
use_backend letsencrypt-backend if letsencrypt-acl


# LE Backend
backend letsencrypt-backend
    server letsencrypt 127.0.0.1:8888



backend web_servers
    mode http
    balance roundrobin
    #balance source
    option forwardfor
    option httpclose
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }

    #option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    option tcp-check
    cookie SRVNAME insert
    http-send-name-header X-Server
#    option httpchk OPTIONS /info.php HTTP/1.0
#    http-check expect status 200                                                         â”‚
#    default-server inter 3s fall 1 rise 2
#    timeout queue 10s


#  BACKEND SERVER IS HERE
      server main   165.232.174.55:80 cookie main check weight 10
      #server node1  165.232.170.250:80 cookie node1 check weight 10
   #  server node2  178.128.82.106:80 cookie node2 check weight 10


#  END BACKEND SERVER



listen stats
    bind *:1936
    stats enable
#    stats hide-version
#    stats refresh 30s
    stats show-node
    stats show-legends
    stats auth admin:vrthefrog
    stats uri  /stats